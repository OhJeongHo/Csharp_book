/*
 * 확장 메소드
 * 확장 메소드는 원본 형식을 변경하지 않고 이미 있는 형식에 추가로 기능을 덧붙일 수 있다.
 * 이미 만들어있는 클래스 기능을 확장하고, 클래스와 구조체, 인터페이스에서 사용할 수 있다.
 * 봉인된(sealed) 클래스는 상속이 불가능하므로 봉인 클래스에 새로운 메소드를 적용하기 유용함.
 * 
 * 확장 메소드는 static 키워드가 붙은 클래스에 static 메소드로 만들어지며 반드시 동일한 네임스페이스를 참조해야한다.
 * 확장 메소드의 첫 번째 매개변수에 this 키워드를 지정하여 확장 메소드를 사용할 개체 형식을 선택할 수 있다.
 * 
 * 확장 메소드의 메소드 시그니처는 아래와 같이 표현함.
 * 첫번째 매개변수는 직접 넘겨주는 것이 아닌 정적 메소드로 호출할 개체 형식을 표현함.
 * public static void MethodName(this object obj, int i) { }
 * public static void MethodName(this string str, int i) { }
 * 
 * 확장 메소드 만들기를 정리하면 다음과 같다.
 * 정적 클래스에 정적 메소드로 구현함
 * 첫 번째 매개변수에 this 키워드를 붙임
 * 같은 범위를 같은 네임스페이스에서 호출할 수 있음
 * 확장 메소드도 오버로드가 가능
 */